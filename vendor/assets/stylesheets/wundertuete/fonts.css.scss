/**
 * _fonts.css.scss
 *
 * @author Maik Kempe
 * @package wundertuete
 * @media screen
 * @version 1.0
 * @revision -
 * @lastmodified 02/10/13
 */

$base-font-family: unquote('Arial, Helvetica, sans-serif') !default;
$base-font-size: 100% !default;
$base-color: #000 !default;
$base-line-height: 1.25 !default;

/**
 * @mixin fonts
 */

@mixin fonts {
  @include font-normalization;
}

/**
 * @mixin font normalization
 *
 * Font normalization inspired by YUI Library's (http://yuilibrary.com) “fonts.css”.
 */

@mixin font-normalization($font-family: $base-font-family, $font-size: $base-font-size, $color: $base-color, $line-height: $base-line-height) {
  body {
    color: $color;
    font-family: $font-family;
    font-size: $font-size;
    *font-size: small;
    line-height: $line-height; // Hack retained to preserve specificity
  }
}

/**
 * @mixin font-size
 *
 * Sets the font size specified in pixels using percents so that the base
 * font size changes and 1em has the correct value. When nesting font size
 * declarations, within the DOM tree, the “base-font-size” must be the parent's
 * effective font-size in pixels.
 *
 * Usage Examples:
 *
 * .big
 *   +font-size(16px)
 * .bigger
 *   +font-size(18px)
 * .big .bigger
 *   +font-size(18px, 16px)
 *
 * @see http://yuilibrary.com/yui/docs/cssfonts/#fontsize
 */

@mixin font-size($size, $base-font-size: $base-font-size) {
  font-size: ceil(percentage($size / $base-font-size));
}