/**
 * helpers.css.sass
 *
 * @package wundertuete
 * @media screen
 * @version 1.0
 */

$base-font-measurement: 16 !default

/**
 * @mixin helpers
 *
 * Non-semantic helper classes.
 */

@mixin helpers
  .invisible
    @include invisible

  .hidden
    @include hidden

  .visually-hidden
    @include visually-hidden

  .clearfix
    @include micro-clearfix

/**
 * @mixin invisible
 *
 * Hide visually and from screenreaders, but maintain layout.
 */

@mixin invisible
  visibility: hidden

/**
 * @mixin hidden
 *
 * Hide for both screenreaders and browsers.
 *
 * @see http://css-discuss.incutio.com/wiki/screenreader_visibility
 */

@mixin hidden
  display: none

  @include invisible

/**
 * @mixin visually hidden
 *
 * Hide only visually, but have it available for screenreaders by Jon Neal.
 *
 * @see http://www.webaim.org/techniques/css/invisiblecontent
 * @see http://adaptivethemes.com/using-css-clip-as-an-accessible-method-of-hiding-content
 */

@mixin visually-hidden
  border: 0
  clip: rect(0 0 0 0)
  height: 1px
  margin: -1px
  overflow: hidden
  padding: 0
  position: absolute
  width: 1px

  /**
   * Extends the “visually-hidden” class to allow the element to be focusable when
   * navigated to via the keyboard.
   *
   * @see http://drupal.org/node/897638
   */

  &.focusable:active,
  &.focusable:focus
    clip: auto
    height: auto
    margin: 0
    overflow: visible
    position: static
    width: auto

/**
 * @mixin micro clearfix
 *
 * Micro clearfix provides an easy way to contain floats without adding additional
 * markup.
 *
 * @see http://nicolasgallagher.com/micro-clearfix-hack
 */

@mixin micro-clearfix
  /**
   * 1. The space content is one way to avoid an Opera bug when the contenteditable
   *    attribute is included anywhere else in the document. Otherwise it causes space
   *    to appear at the top and bottom of elements that are clearfixed.
   * 2. The use of “table” rather than “block” is only necessary if using “:before” to
   *    contain the top-margins of child elements.
   * 3. Trigger hasLayout and contain floats, for IE 6/7 only.
   */

  &:before,
  &:after
    content: ' ' // 1
    display: table // 2

  &:after
    clear: both

  *zoom: 1 // 3

/**
 * @function pem
 *
 * Convert px to em units.
 *
 * For a relational value of 12px write “pem(12)” where the parent defaults
 * to $base-font-measurement respectively 16px. If the parent is another value
 * say 24px write “pem(12, 24)”.
 *
 * Example:
 *
 * margin-right: pem(12);
 * margin-right: pem(12, 24);
 *
 * @see http://mrdanadams.com/2012/pixel-ems-css-conversion-sass-mixin
 */

@function pem($value, $base: $base-font-measurement)
  @return ($value / $base) * 1em

/**
 * @mixin convert
 *
 * Used to convert px to em units for multiple properties, values or both.
 * $base is an optional parameter that allows making measurements relative
 * to the parent font size rather than the current. It also accepts a list
 * of lists (instead a list of values) for properties that accept multiple
 * lists of values. Only numbers get converted; everything else is passed
 * through.
 *
 * Example:
 *
 * @include convert(line-height, 30);
 * @include convert(line-height, 30, 16);
 * @include convert(width height, 125);
 * @include convert(padding, 0 25, 16);
 * @include convert(text-shadow, (#0D6E28 1 1) (#777 0 0 2), 16);
 * @include convert(box-shadow, (inset 0 0 0 1 #2A9022) (inset 0 0 3 #459966), 16);
 *
 * @see http://mrdanadams.com/2012/pixel-ems-css-conversion-sass-mixin
 */

@mixin convert($properties, $sizes, $base: $base-font-measurement)
  $values: ()

  $sublists: false

  @each $size in $sizes
    // Unwrap lists for values that have multiple list of values such as text-shadow
    @if type-of($size) == list
      $sublists: true

      $vv: ()

      @each $ss in $size
        $vv: append($vv, if(type-of($ss) == number, ($ss / $base) * 1em, $ss))

      $values: append($values, join((), $vv))
    @else
      $values: append($values, if(type-of($size) == number, ($size / $base) * 1em, $size))

  $value: join((), $values, if($sublists, comma, space))

  @each $property in $properties
    #{$property}: $value

/**
 * @mixin smack in the middle
 */

@mixin smack-in-the-middle($height, $width)
  height: $height
  left: 50%
  margin: -#{$height / 2} 0 0 -#{$width / 2}
  position: absolute
  text-align: center
  top: 50%
  width: $width